{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "This is a documentation of contacts app\n"
  },
  "servers": [
    {
      "url": "<http://localhost:3000>"
    },
    {
      "url": "<https://nodejs-hw-crud.onrender.com>"
    }
  ],
  "tags": [
    {
      "name": "contacts",
      "description": "Operations about contacts."
    },
    {
      "name": "auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getContacts",
        "description": "Get list of contacts with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name"
            },
            "description": "All contact's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "example": "asc"
            },
            "description": "Sort by 'asc' or 'desc' order. Default value - 'asc'"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "home"
            },
            "description": "All contact's fields can be mentioned. Default value - 'home'"
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found all contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasPreviousPage",
                        "hasNextPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 10
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 2
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "isFavourite",
                  "contactType",
                  "userId",
                  "photo"
                ],
                "properties": {
                  "name": {
                    "description": "The name of the contact",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "The phone number of the contact",
                    "type": "string",
                    "example": "1234567890"
                  },
                  "email": {
                    "description": "The email of the contact",
                    "type": "string",
                    "example": "jdoe@me.com"
                  },
                  "isFavourite": {
                    "description": "The favourite status of the contact",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "The type of the contact",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  },
                  "userId": {
                    "description": "The id of the user",
                    "type": "string",
                    "example": "667d0d51c137f9dcde2e49d9"
                  },
                  "photo": {
                    "description": "The photo of the contact",
                    "type": "string",
                    "example": "<'https://res.cloudinary.com/df82cctu3/image/upload/v1719663396/nxg7kamnq8xofslswd4a.jpg'>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "667ffb25b5614c07f19ac369"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 667ffb25b5614c07f19ac369!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "patch Contact"
        ],
        "summary": "Patch contact",
        "operationId": "patchContact",
        "description": "Patch contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "667ffb25b5614c07f19ac369"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "isFavourite",
                  "contactType",
                  "userId",
                  "photo"
                ],
                "properties": {
                  "name": {
                    "description": "The name of the contact",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "The phone number of the contact",
                    "type": "string",
                    "example": "1234567890"
                  },
                  "email": {
                    "description": "The email of the contact",
                    "type": "string",
                    "example": "jdoe@me.com"
                  },
                  "isFavourite": {
                    "description": "The favourite status of the contact",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "The type of the contact",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  },
                  "userId": {
                    "description": "The id of the user",
                    "type": "string",
                    "example": "667d0d51c137f9dcde2e49d9"
                  },
                  "photo": {
                    "description": "The photo of the contact",
                    "type": "string",
                    "example": "<'https://res.cloudinary.com/df82cctu3/image/upload/v1719663396/nxg7kamnq8xofslswd4a.jpg'>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "deleteContact"
        ],
        "summary": "Delete contact",
        "operationId": "deleteContact",
        "description": "Delete contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "example": "667d0d51c137f9dcde2e49d9"
            },
            "required": true,
            "description": "The contact id"
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "userId",
          "photo"
        ],
        "properties": {
          "_id": {
            "description": "The id of the contact",
            "type": "string",
            "example": "667ffb25b5614c07f19ac369"
          },
          "name": {
            "description": "The name of the contact",
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "description": "The phone number of the contact",
            "type": "string",
            "example": "1234567890"
          },
          "email": {
            "description": "The email of the contact",
            "type": "string",
            "example": "jdoe@me.com"
          },
          "isFavourite": {
            "description": "The favourite status of the contact",
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "description": "The type of the contact",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work"
          },
          "userId": {
            "description": "The id of the user",
            "type": "string",
            "example": "667d0d51c137f9dcde2e49d9"
          },
          "photo": {
            "description": "The photo of the contact",
            "type": "string",
            "example": "<'https://res.cloudinary.com/df82cctu3/image/upload/v1719663396/nxg7kamnq8xofslswd4a.jpg'>"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}